from typing import Protocol, type_check_only

@type_check_only
class HasTask[I, O](Protocol):
    def __call__(self, message: I, /) -> O: ...

class PyTask[I, O]:
    def __init__(self, *, inner: HasTask[I, O]) -> None: ...
    def __call__(self, msg: I, /) -> O: ...

class PyParallelTask[I, O]:
    def __init__[IB, O1, O2](
        self: PyParallelTask[IB, tuple[O1, O2]],
        *,
        task_1: HasTask[IB, O1],
        task_2: HasTask[IB, O2],
    ) -> None: ...
    def __call__(self, msg: I, /) -> O: ...

class PySerialTask[I, O]:
    def __init__[M](self, *, task_1: HasTask[I, M], task_2: HasTask[M, O]) -> None: ...
    def __call__(self, msg: I, /) -> O: ...
